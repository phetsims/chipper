// Copyright 2024-2025, University of Colorado Boulder

/**
 * Babel plugin that removes calls to 'affirm', 'affirmCallback', and replaces 'isAffirmEnabled()' with "false" so it can be stripped out as dead code.
 * NOTE: This code is very brittle since it relies on the structure and quirks of the code that is generated by Webpack.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */
module.exports = function() {
  return {
    visitor: {
      CallExpression( path ) {

        const callee = path.get( 'callee' );

        // Check if the call expression is a call to 'affirm' or 'affirmCallback'
        if ( callee.isIdentifier( { name: 'affirm' } ) ||
             callee.isIdentifier( { name: 'affirmCallback' } ) ) {
          path.remove();
        }
        else if ( callee.isSequenceExpression() ) {

          // Handle webpack-transformed affirm calls like (0,affirm/* default */.Ay)(...)
          // Or (0, _perennial_alias_js_browser_and_node_affirm_js__WEBPACK_IMPORTED_MODULE_0__ /* ["default"] */.Ay)(!this.loadComplete, 'cannot complete load twice without a reset() in-between')
          // This handles the sequence expression pattern: (0, memberExpression)(...)

          const expressions = callee.get( 'expressions' );
          if ( expressions.length === 2 ) {
            const secondExpr = expressions[ 1 ];

            // Check if it's a member expression accessing affirm
            if ( secondExpr.isMemberExpression() ) {
              const object = secondExpr.get( 'object' );

              // Check if the object identifier contains 'affirm' (handles cases like affirm_default_1, affirm/* default */, etc.)
              if ( object.isIdentifier() ) {
                const name = object.node.name;

                // TODO: could this incorrectly remove other code that has the word affirm in it? See https://github.com/phetsims/perennial/issues/452
                // TODO: Are there other forms this is missing? See https://github.com/phetsims/perennial/issues/452
                // if ( path.toString().includes( 'affirm' ) ) {
                  // display the code to be removed:
                  // console.log( 'Removing PATH:', path.toString() );
                // }

                if ( name === 'affirm' || name.includes( '_affirm_' ) ) {

                  // TODO: Remove console.log statements after review, see https://github.com/phetsims/perennial/issues/452
                  // display the code to be removed:
                  // console.log( 'Removing affirm call:', path.toString() );

                  // Check if this CallExpression is the direct child of an ExpressionStatement
                  if ( path.parentPath.isExpressionStatement() ) {

                    // Safe to remove the entire statement
                    path.parentPath.remove();

                  }
                  else {
                    // Replace with undefined if it's part of a larger expression
                    path.replaceWithSourceString( 'undefined' );
                  }
                }
              }
            }
          }
        }

        // Handle the use of a boolean function, so blocks of code can be stripped out too.
        if ( callee.isIdentifier( { name: 'isAffirmEnabled' } ) ) {

          // The internet says replaceWithSourceString() is a bit less performant than using babel/types
          // path.replaceWith( t.booleanLiteral( false ) ), but adding that npm dependency seems like undue overhead
          // for this line.
          path.replaceWithSourceString( 'false' );
        }
      }
    }
  };
};